
def buildFullProjectName(File rootDir, File dir) {
    if(dir == null || !dir.exists() || !dir.isDirectory()) {
        return ""
    }
    if(!file("${dir}/build.gradle").exists() && !file("${dir}/settings.gradle").exists() && !file("${dir}/package.json").exists()) {
        return ""
    }
    if(rootDir.absolutePath == dir.absolutePath) {
        return ""
    }
    def fullProjectName = dir.name
    if(dir.parentFile != null && dir.parentFile.exists()) {
        fullProjectName = buildFullProjectName(rootDir, dir.parentFile) + ":${fullProjectName}"
    }
    return fullProjectName
}

rootDir.traverse(
        type: groovy.io.FileType.DIRECTORIES,
        preDir: {
            if (!file("${it}/build.gradle").exists() && !file("${it}/settings.gradle").exists() && !file("${it}/package.json").exists()) {
                return groovy.io.FileVisitResult.SKIP_SUBTREE
            }
        }) { dir ->
    if (dir) {
        def fullProjectName = buildFullProjectName(rootDir, dir)
        if(!fullProjectName.isEmpty()) {
            println "include ${fullProjectName}"
            include fullProjectName //register the project path using : notation
            def project = project(fullProjectName)
            if(project.parent == null || project.parent.projectDir == rootDir) {
                println "project(${fullProjectName}).projectDir = new File(settingsDir, ${project.name})"
                project.projectDir = new File(settingsDir, project.name)
            } else {
                println "project(${fullProjectName}).projectDir = new File(project(${project.parent.name}).projectDir, ${project.name})"
                project.projectDir = new File(project.parent.projectDir, project.name)
            }
        }
    }
}

